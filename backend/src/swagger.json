{
    "openapi": "3.0.0",
    "info": {
        "title": "Pizzaria - API",
        "description": "Documentation of Pizzaria's API",
        "contact": {
            "email": "mjsa.sanches25@gmail.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:3333",
            "description": "Local"
        }
    ],
    "paths": {
        "/users": {
            "post": {
                "summary": "Create a new user",
                "description": "Route responsible for creating a new user",
                "tags": [
                    "User"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name of the user"
                                    },
                                    "email": {
                                        "type": "string",
                                        "description": "Email of the user"
                                    },
                                    "password": {
                                        "type": "string",
                                        "description": "Password of the user"
                                    }
                                },
                                "example": {
                                    "name": "user",
                                    "email": "user@example.com",
                                    "password": "password123"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": "The unique identifier of the user"
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "Name of the user"
                                        },
                                        "email": {
                                            "type": "string",
                                            "description": "Email of the user"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Invalid input data"
                    }
                }
            }
        },
        "/session": {
            "post": {
                "summary": "Authenticate a user",
                "description": "Route responsible for authenticating a user.",
                "tags": [
                    "User"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "description": "Email of the user"
                                    },
                                    "password": {
                                        "type": "string",
                                        "description": "Password of the user"
                                    }
                                },
                                "example": {
                                    "email": "user@example.com",
                                    "password": "password123"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Authentication successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": "The unique identifier of the user"
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "Name of the user"
                                        },
                                        "email": {
                                            "type": "string",
                                            "description": "Email of the user"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "JWT token for authenticated user"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Invalid email or password"
                    }
                }
            }
        },
        "/me": {
            "get": {
                "summary": "Get user details",
                "description": "Route responsible for retrieving user details.",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "description": "The unique identifier of the user",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": "The unique identifier of the user"
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "Name of the user"
                                        },
                                        "email": {
                                            "type": "string",
                                            "description": "Email of the user"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/category": {
            "post": {
                "summary": "Criar uma nova categoria",
                "description": "Rota respons√°vel por criar uma nova categoria",
                "tags": [
                    "Category"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Nome da categoria"
                                    }
                                },
                                "example": {
                                    "name": "Nome da Categoria"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Categoria criada com sucesso",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": "Identificador √∫nico da categoria"
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "Nome da categoria"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Requisi√ß√£o inv√°lida. Dados de entrada inv√°lidos"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "get": {
                "summary": "List categories",
                "description": "Route responsible for listing categories",
                "tags": [
                    "Category"
                ],
                "responses": {
                    "200": {
                        "description": "Categories retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "format": "int64",
                                                "description": "The unique identifier of the category"
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Name of the category"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/product": {
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Create a new product",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name of the product"
                                    },
                                    "price": {
                                        "type": "string",
                                        "description": "Price of the product"
                                    },
                                    "description": {
                                        "type": "string",
                                        "description": "Description of the product"
                                    },
                                    "file": {
                                        "type": "string",
                                        "format": "binary",
                                        "description": "Banner file of the product"
                                    },
                                    "category_id": {
                                        "type": "string",
                                        "description": "ID of the category to which the product belongs"
                                    }
                                },
                                "required": [
                                    "name",
                                    "price",
                                    "file",
                                    "category_id"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product created successfully"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/category/product": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "List products by category",
                "parameters": [
                    {
                        "name": "category_id",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "ID of the product category"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Products listed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Product"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Create a new order",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "table": {
                                        "type": "string",
                                        "description": "Table number for the order"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Customer name for the order"
                                    }
                                },
                                "example": {
                                    "table": 31,
                                    "name": "Matheus Ariza (opcional)"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order created successfully"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order/remove": {
            "delete": {
                "tags": [
                    "Orders"
                ],
                "summary": "Remove an order",
                "parameters": [
                    {
                        "name": "order_id",
                        "in": "query",
                        "required": true,
                        "description": "The unique identifier of the order",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order removed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order/addItem": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Add an item to an order",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "order_id": {
                                        "type": "string",
                                        "description": "The unique identifier of the order"
                                    },
                                    "product_id": {
                                        "type": "string",
                                        "description": "The unique identifier of the product"
                                    },
                                    "amount": {
                                        "type": "number",
                                        "description": "The quantity of the product"
                                    }
                                },
                                "example": {
                                    "order_id": "123",
                                    "product_id": "456",
                                    "amount": 2
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Item added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Item"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order/removeItem": {
            "delete": {
                "tags": [
                    "Orders"
                ],
                "summary": "Remove an item from an order",
                "parameters": [
                    {
                        "name": "item_id",
                        "in": "query",
                        "required": true,
                        "description": "The unique identifier of the item",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item removed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order/send": {
            "put": {
                "tags": [
                    "Orders"
                ],
                "summary": "Send an order",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "order_id": {
                                        "type": "string",
                                        "description": "The unique identifier of the order"
                                    }
                                },
                                "example": {
                                    "order_id": "12345"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/orders": {
            "get": {
                "summary": "List Orders",
                "description": "Endpoint to get a list of orders",
                "tags": [
                    "Orders"
                ],
                "responses": {
                    "200": {
                        "description": "List of orders successfully retrieved"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order/detail": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get order details",
                "parameters": [
                    {
                        "name": "order_id",
                        "in": "query",
                        "required": true,
                        "description": "The unique identifier of the order",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order/finish": {
            "put": {
                "tags": [
                    "Orders"
                ],
                "summary": "Finish an order",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "order_id": {
                                        "type": "string",
                                        "description": "The unique identifier of the order"
                                    }
                                },
                                "example": {
                                    "order_id": "12345"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order finished successfully"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}